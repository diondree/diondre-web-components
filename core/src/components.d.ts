/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface TestButton {
        /**
          * Alignment of button content
         */
        "alignment": 'left' | 'right' | 'center';
        "btnType": 'solid' | 'outline' | 'ghost';
        /**
          * reference to the button element
         */
        "button": HTMLElement;
        /**
          * Wether the button is disabled or not
         */
        "disabled": boolean;
        /**
          * Whether or not the button should fill the height of its parent
         */
        "fullHeight": boolean;
        /**
          * Whether or not the button should fill the width of its parent
         */
        "fullWidth": boolean;
        /**
          * give the button square borders
         */
        "noBorderRadius": boolean;
        /**
          * The size of the button
         */
        "size": 'sm' | 'md' | 'lg';
        /**
          * The type of button (corresponds to type property of native html button)
         */
        "type": 'confirm' | 'submit' | 'button';
        /**
          * color theme to be applied to the button e.g primary
         */
        "variation": 'default' | 'primary' | 'destructive' | 'warning';
    }
}
declare global {
    interface HTMLTestButtonElement extends Components.TestButton, HTMLStencilElement {
    }
    var HTMLTestButtonElement: {
        prototype: HTMLTestButtonElement;
        new (): HTMLTestButtonElement;
    };
    interface HTMLElementTagNameMap {
        "test-button": HTMLTestButtonElement;
    }
}
declare namespace LocalJSX {
    interface TestButton {
        /**
          * Alignment of button content
         */
        "alignment"?: 'left' | 'right' | 'center';
        "btnType"?: 'solid' | 'outline' | 'ghost';
        /**
          * reference to the button element
         */
        "button"?: HTMLElement;
        /**
          * Wether the button is disabled or not
         */
        "disabled"?: boolean;
        /**
          * Whether or not the button should fill the height of its parent
         */
        "fullHeight"?: boolean;
        /**
          * Whether or not the button should fill the width of its parent
         */
        "fullWidth"?: boolean;
        /**
          * give the button square borders
         */
        "noBorderRadius"?: boolean;
        /**
          * The size of the button
         */
        "size"?: 'sm' | 'md' | 'lg';
        /**
          * The type of button (corresponds to type property of native html button)
         */
        "type"?: 'confirm' | 'submit' | 'button';
        /**
          * color theme to be applied to the button e.g primary
         */
        "variation"?: 'default' | 'primary' | 'destructive' | 'warning';
    }
    interface IntrinsicElements {
        "test-button": TestButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "test-button": LocalJSX.TestButton & JSXBase.HTMLAttributes<HTMLTestButtonElement>;
        }
    }
}
